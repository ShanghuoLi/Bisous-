# Example configuration file for Bisous model (MCMC filament finder)
# Author: Elmo Tempel (elmo.tempel@to.ee)
#
# Configuration file is divided into sections,
# section names are given in square brackets []

# General parameters that affect the program execution and setup
[general]

# What type of action is executed?
#	:: 1 - normal MCMC simulation (produces set of realisations)
#	:: 2 - analyses set of realisations (produced during normal execution)
main_option = 1

# verbose output (to terminal) of some statistics during program execution
verbose = t
# resume previously interrupted simulation
# if resume file does not exist or is corrupted, start new simulation
resume = f
# maximum time for program execution in hours (0.0166=1min)
max_time_hour = 48.0

# datafile type (1..2)
#  :: 1 - normal x,y,z,(lum)
#  :: 2 - normal, but additional max distance cut (dummy_1 parameter)
input_type = 1
# name of the datafile
file_data = example_dataset.txt
# additional parameters - parameters for specific input
dummy_1 = 0.0
# root of output - can be set from command line as well
root = bm_

# scale factor: can be used to rescale the input datapoints
scale_factor = 1.0
# size of cylinder array for memory allocation
cylarr_size = 200000


# Parameters controlling the MCMC and simulation execution
[mcmc]

# mcmc cycles (temperature is change after every cycle)
nr_cycles = 100000
# nf of moves in every cycle (with constant temperature)
nr_moves = 10000 # _min_frac_con can increase this value
nr_moves_min_frac_con = 1.0 # min nr of moves wrt nr of connected cyls
# every cycle to stat file (and verbose output)
every_cycle_to_stat = 10
# every cycle to output file (and resume file)
every_cycle_to_output = 500

# mcmc cooling schedule::
# 1 - constant temperature (temp_initial)
# 2 - simulated annealing (log decrease)
# 3 - simulated tempering
# 4 - combined (sim tempering + annealing)
cooling_schedule = 4

# initial (max) and final (min) temperatures
temp_initial = 1.5
temp_final = 0.4
st_temp_steps = 20 # temperature steps for simulated tempering
# simulated tempering probability constant (change temp ladder)
# larger value increase temp chnage probability
st_expected_nrcyl_size = 0.5

# next parameters are for combined cooling schedule (4)
nr_cycle_for_tempering = 10000 # cycles for sim tempering, after that sim annealing is started
# next parameters are for burnin, where min and max temperatures are adjusted automatically
# burnin phace is before tempering cycles
nr_cycle_for_burnin = 5000 # (<=0 :: no burn-in phase) during burnin, get the inital # of cyls
st_adjust_temp_ladder_coef = 0.4 # min and max nr of conn cyls diff for temp ladder (after burn-in)
st_adjust_temp_ladder_coef_free_min = 0.05 # minimum nr of free cylinders compared with 2-conn cyls
st_adjust_temp_ladder_coef_free_max = 1.0 # maximum nr of free cylinders compared with 2-conn cyls

# sum of next three <= 1.0
prop_birth = 0.5
prop_death = 0.3
prop_change = 0.2
# connected cylinder fraction from birth moves (<1.0)
prop_birth_connected = 0.8
# for change move: cyl shift radius (physical units)
# cyl length change is up to connection radius
change_delta_r = 0.2
# for change: min cosi value (between old and new)
change_delta_cosi = 0.95

# sampling volume parameters
# volume fraction for MH normalising
auto_sampling_volume = t # automatic sampling volume determination
auto_volume_multiplier = 1.0 # parameter for MH dynamics (adjust auto volume multiplier)
auto_samvol_acc = 0.1 # required accuracy for sampling volume
auto_samvol_maxtime = 0.5 # maximum time in minutes for samvol calculation
# ... used if auto_sampling_volume = false
volume_fraction = 1.0E-02 #  (applies for random cylinders)
# volume multiplier (applies for random and connected cylinders)
volume_multiplier = 100.0


[data_term]

# nr of minimum points in a cylinder (min_pts >=3)
min_pts = 3
# cylinder radius parameters
use_fixed_radius = f # if true, use cyl_rad_min value
cyl_rad_min = 0.4 # physical (input coordinates) units
cyl_rad_max = 1.2 # physical units
# cylinder minimum and maximum lengths
cyl_len_min = 3.0
cyl_len_max = 10.0
# cylinder length/diameter min and max ratios (for auto radius)
# ... cylinder have to have cylindrical shape
cyl_rel_lvsd_min = 3.0
cyl_rel_lvsd_max = 10.0

# cylinder shadow size (in units of cylinder radius)
cyl_shadow_rad = 1.0
# hypothesis testing: uniform distribution (average value)
hyptest_uniform_den = 5.0
# hypotheis testing: locally high density: number density in cyl and shadow
hyptest_local_den = 6.0
# hypothesis testing: uniform pvalue cut
hyptest_uniform_p_cut = 0.001
# hypothesis testing: locally high density pvalue cut
hyptest_local_p_cut = 0.001
# cylinder vairance coefficient (to scale variance and hypothesis testing)
variance_coeff_min = 0.6
variance_coeff_max = 0.6
hypothesis_coeff_min = 1.0
hypothesis_coeff_max = 1.0
# nr of radiuses for data term calculation (for automatic radius finding)
nr_of_rad_samples = 20 # very minor effect for speed


[interaction_term]

# cylinder connection radius (physical units)
rad_connection = 0.5
#
# orthogonal cylinders (cos(i))
cos_orthogonal = 0.5
# parallel cylinders
cos_parallel = 0.85
# connected cylinder max radius difference (x times)
concyl_radius_difference = 1.5
repulsive_radius_difference = 3.0 # if cyl is that much smaller/larger -> no repulsion

#
# self-regulating interaction potential
lg_gamma_use_self_regulation = t
# ... in units of mean data potential
lg_gamma_0_mean = -1.4
lg_gamma_1_mean = -0.2
lg_gamma_2_mean =  0.9
# interaction interval in units of data pot sigma: +-sigma
lg_gamma_0_disp = 0.8
lg_gamma_1_disp = 0.8
lg_gamma_2_disp = 0.8
#
# use interval for interaction gammas
# it also controls, whether the interval is used for self requlation
lg_gamma_use_interval = t
# -- _min and _max are used for tempering initialisation
lg_gamma_0_min = -2.3  #-1.0
lg_gamma_1_min = -0.6  #-0.3
lg_gamma_2_min = 1.1  #0.8
#
lg_gamma_0_max = -1.7  #-1.0
lg_gamma_1_max = 0.0  #-0.3
lg_gamma_2_max = 1.7  #1.8
#
# interaction enerrgy log(gamma_x)
# for constant values in case of data energy dependent values are not used
lg_gamma_0 = -1.4  #-1.0
lg_gamma_1 = -0.2  #-0.3
lg_gamma_2 = 1.3  #1.5


# set the masking parameters
# -- currently only box mask is implemented
[cmask]

c_cmask_use_boundary_cyls = f
c_cmask_plim_use = f
c_cmask_pmin_x = 0.0
c_cmask_pmin_y = 0.0
c_cmask_pmin_z = 0.0
c_cmask_pmax_x = 64.0
c_cmask_pmax_y = 64.0
c_cmask_pmax_z = 64.0


#-------------------------------------------------------------------
# below are parameters for post processing/analysing of mcmc data
#-------------------------------------------------------------------

# parameters that describe, where the raw realisation data is stored
[raw_data]

# root directory for files
root_dir = results

# data from multiple runs
multiple_runs = true
root_dir_run = run_000 # last letters are run numbers
run_first = 1 # first run number (for analysis)
run_last  = 4 # last run number (for analysis)

# realisation data to be analysed (bm_zyls_00000.cyl files)
rs_first = 100 # index for first file
rs_last  = 200 #200 # index for last file
rs_every = 1 # every nth file is used

# weights for 0,1,2 connected cylinders
weight_0 = 1.0
weight_1 = 1.0
weight_2 = 1.0
# radius smoothing scale (radius is multiplied by this value)
r_smooth = 1.0

# read data in old format
# for compatability and for reprocessing
old_format = false

# parameters for analysing the MCMC data
[analyse]

# parameters for spine extraction
# --- minimum dist between spines: grid_size*1.2 (implemented in this way)
initial_grid_size = 0.5 # size of initial grid (input units)
spine_location_accuracy = 0.1 # accuracy of spine location (input units) - smaller than cyl rad
spine_location_accuracy_tuning = 5 # (int) - how many times is final accuracy better (see code)
# next two parameters define the thresholds for filament spines
minimim_visitmap_value = 0.05 # fraction 0..1
minimum_orientation_strength = 0.75 # value between 0..1

# spacing of points along filament spine (fraction of fil radius)
# spacing_max must be smaller than initial_grid_size !!!
spine_spacing_rad_frac = 1.0 # must be lower than 1
spine_spacing_max = 0.5 # masimum distance between two points along the spine (input units)

# parameters that should be large enough to store temporary arrays
max_nr_of_fil_spines = 100000 # nr of spines
max_nr_of_fil_points = 100000 # max (half)length for one spine

# parameters for testing the program...
[testing]

# use constant dataterm and value
constant_dataterm = F
constant_dataterm_value = 0.0
# no interactions
no_interactions = f

# Poission sample: beeta = Ncyl / Volume
# dataterm_value = - log(beeta)



